#-------------THE SCRIPT-------------

stack = []

arg1 = 13
arg2 = 29
# program 1: max, sum, diff, GCD, LCM
# due to a limitation of loops in this language, calculating the GCD only works up to an arbitrary value.
# MAX
stack.append(arg1)
stack.append(arg2)
b = stack.pop()
a = stack.pop()
stack.append(a > b)
if stack.pop():
    stack.append(arg1)
    stack.append('MAX:')
    print(stack[-1])
    stack.pop()
    print(stack[-1])
    stack.pop()
    stack.append(False)
stack.append(arg2)
stack.append(arg1)
b = stack.pop()
a = stack.pop()
stack.append(a > b)
if stack.pop():
    stack.append(arg2)
    stack.append('MAX:')
    print(stack[-1])
    stack.pop()
    print(stack[-1])
    stack.pop()
stack.append(arg2)
stack.append(arg1)
b = stack.pop()
a = stack.pop()
stack.append(a == b)
if stack.pop():
    stack.append(arg1)
    stack.append('EQUAL MAXES:')
    print(stack[-1])
    stack.pop()
    print(stack[-1])
    stack.pop()
# SUM
stack.append(arg1)
stack.append(arg2)
b = stack.pop()
a = stack.pop()
stack.append(a + b)
stack.append('SUM:')
print(stack[-1])
stack.pop()
print(stack[-1])
stack.pop()
# DIFF
stack.append(arg1)
stack.append(arg2)
b = stack.pop()
a = stack.pop()
stack.append(a - b)
stack.append('DIFF:')
print(stack[-1])
stack.pop()
print(stack[-1])
stack.pop()
# PRODUCT
stack.append(arg1)
stack.append(arg2)
b = stack.pop()
a = stack.pop()
stack.append(a * b)
stack.append('PRODUCT:')
print(stack[-1])
stack.pop()
print(stack[-1])
stack.pop()
# GCD
stack.append('GCD:')
print(stack[-1])
stack.append(arg1)
stack.append(arg2)
b = stack.pop()
a = stack.pop()
stack.append(a > b)
if stack.pop():
    stack.append(arg1)
    gcda = stack.pop()
    stack.append(arg2)
    gcdb = stack.pop()
    stack.append(False)
if stack.pop():
    stack.append(arg2)
    gcda = stack.pop()
    stack.append(arg1)
    gcdb = stack.pop()
stack.append(gcda)
greater = stack.pop()
stack.append(1)
x = stack.pop()
stack.append(1)
gcd = stack.pop()
for _ in range(500):
    stack.append(greater)
    stack.append(x)
    b = stack.pop()
    a = stack.pop()
    stack.append(a % b)
    stack.append(0)
    b = stack.pop()
    a = stack.pop()
    stack.append(a == b)
    if stack.pop():
        stack.append(gcdb)
        stack.append(x)
        b = stack.pop()
        a = stack.pop()
        stack.append(a % b)
        stack.append(0)
        b = stack.pop()
        a = stack.pop()
        stack.append(a == b)
        if stack.pop():
            stack.append(x)
            gcd = stack.pop()
    stack.append(x)
    stack.append(1)
    b = stack.pop()
    a = stack.pop()
    stack.append(a + b)
    x = stack.pop()
print(gcd)
stack.append('LCM:')
print(stack[-1])
stack.append(arg1)
stack.append(arg2)
b = stack.pop()
a = stack.pop()
stack.append(a * b)
stack.append(gcd)
b = stack.pop()
a = stack.pop()
stack.append(a / b)
print(stack[-1])
